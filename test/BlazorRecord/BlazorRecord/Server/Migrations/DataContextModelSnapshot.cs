// <auto-generated />
using System;
using BlazorRecord.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorRecord.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlazorRecord.Shared.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "qqq@gmail.com",
                            Name = "Ben",
                            Phone = "0966666666",
                            Position = "工程師"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ddd@gmail.com",
                            Name = "Alan",
                            Phone = "0988888888",
                            Position = "工程師"
                        });
                });

            modelBuilder.Entity("BlazorRecord.Shared.PunchRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Hours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PunchIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Records");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3319),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3322),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 2,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3330),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3331),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 3,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3337),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3340),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 4,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3353),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3354),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 5,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3359),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3359),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 6,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3365),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3366),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 7,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3370),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3371),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 8,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3376),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3377),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 9,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3383),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3384),
                            Time = "2023/07/12"
                        },
                        new
                        {
                            Id = 10,
                            Hours = "",
                            Name = "Ben",
                            PunchIn = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3390),
                            PunchOut = new DateTime(2023, 7, 12, 1, 39, 45, 773, DateTimeKind.Local).AddTicks(3390),
                            Time = "2023/07/12"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
